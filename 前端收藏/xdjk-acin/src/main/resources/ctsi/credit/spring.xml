<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:task="http://www.springframework.org/schema/task" xmlns:cache="http://www.springframework.org/schema/cache"
	xmlns:hdp="http://www.springframework.org/schema/hadoop" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/beans    
                       	 http://www.springframework.org/schema/beans/spring-beans-3.1.xsd    
                      	 http://www.springframework.org/schema/tx 
                      	 http://www.springframework.org/schema/tx/spring-tx.xsd    
    					 http://www.springframework.org/schema/aop 
     					http://www.springframework.org/schema/aop/spring-aop-3.1.xsd   
                        http://www.springframework.org/schema/context    
                        http://www.springframework.org/schema/context/spring-context-3.1.xsd    
                        http://www.springframework.org/schema/mvc    
                        http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd
                         http://www.springframework.org/schema/task 
                         http://www.springframework.org/schema/task/spring-task-3.1.xsd   
     					http://www.springframework.org/schema/cache 
     					http://www.springframework.org/schema/cache/spring-cache.xsd   
     					http://www.springframework.org/schema/hadoop 
     					http://www.springframework.org/schema/hadoop/spring-hadoop.xsd">


	<!-- 数据库连接池 -->
	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource"
		  destroy-method="close">
		<property name="driverClassName" value="${driver}" />
		<property name="url" value="${url}" />
		<property name="username" value="${username}" />
		<property name="password" value="${password}" />
		<property name="maxActive" value="${maxActive}" />
		<property name="maxIdle" value="${maxIdle}" />
		<property name="maxWait" value="${maxWait}" />
		<property name="initialSize" value="${initialSize}" />
		<property name="minIdle" value="${minIdle}" />
		<property name="testOnBorrow">
			<value>true</value>
		</property>
		<property name="validationQuery">
			<value>SELECT 1 FROM DUAL</value>
		</property>
	</bean>
	<!-- SqlsessionFactory -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<!-- 数据源 -->
		<property name="dataSource" ref="dataSource" />
		<!-- mybatis配置文件 -->
		<property name="configLocation" value="classpath:ctsi/credit/SqlMapConfig.xml" />
		<property name="mapperLocations" value="classpath:ctsi/credit/mapper/*.xml" />
	</bean>

	<!-- MapperScannerConfigurer：mapper的扫描器，将包下边的mapper接口自动创建代理对象， 自动创建到spring容器中，bean的id是mapper的类名（首字母小写） -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<!-- 配置扫描包的路径 如果要扫描多个包，中间使用半角逗号分隔 要求mapper.xml和mapper.java同名且在同一个目录 -->
		<property name="basePackage" value="com.ctsi.credit.mapper" />
		<!-- 使用sqlSessionFactoryBeanName -->
		<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory" />

	</bean>


	<!-- 管理事务的Bean -->
	<bean id="tm" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource"/>
	</bean>
	<!-- 开启事务的注解 -->
	<tx:annotation-driven transaction-manager="tm" />
	<!-- 扫描组件注解   SpringMVC 注解 -->
	<context:component-scan base-package="com.ctsi.credit" />

	<!-- 视图解析器  /addUser.jsp    逻辑名abc   /abc.jsp -->
	<bean id="viewResolver" class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="prefix" value="/"/>
		<property name="suffix" value=".jsp"/>
	</bean>

	<!-- 文件上传表单的视图解析器 -->
	<bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<property name="maxUploadSize" value="2097152000" /><!-- 配置文件最大值 1024*1024*1000=1000M  以字节为单位 -->
		<property name="maxInMemorySize" value="4096" /><!-- 配置缓存 -->
		<property name="defaultEncoding" value="UTF-8"></property><!-- 请求的编码格式，必须与JSP页面的编码一样 -->
	</bean>

	<!-- 开启MVC注解 -->
	<mvc:annotation-driven/>

	<!-- 映射静态资源 -->
	<mvc:resources mapping="/vwCredit/**" location="/vwCredit/" />
	<mvc:resources mapping="/vwCredit/css/**" location="/vwCredit/css/" />
	<mvc:resources mapping="/vwCredit/js/**" location="/vwCredit/js/" />
	<mvc:resources mapping="/vwCredit/jsp/**" location="/vwCredit/jsp" />
	<mvc:resources mapping="/vwCredit/img/**" location="/vwCredit/img" />
	<mvc:resources mapping="/vwCredit/images/**" location="/vwCredit/images" />
	<mvc:resources mapping="/vwCredit/jsp/css/**" location="/vwCredit/jsp/css" />
	<mvc:resources mapping="/vwCredit/jsp/data/**" location="/vwCredit/jsp/data" />
	<mvc:resources mapping="/vwCredit/jsp/files/**" location="/vwCredit/jsp/files" />
	<mvc:resources mapping="/vwCredit/jsp/images/**" location="/vwCredit/jsp/images" />
	<mvc:resources mapping="/vwCredit/jsp/js/**" location="/vwCredit/jsp/js" />
	<mvc:resources mapping="/vwCredit/jsp/resources/**" location="/vwCredit/jsp/resources" />

















	<!-- 自动扫描 -->
	<context:component-scan base-package="com.ctsi.credit" />

	<!-- 加载配置文件 id="propertyConfigurer"
	<value>classpath:ctsi/credit/jdbc.properties</value>
		<value>classpath:ctsi/credit/mail.properties</value>
		 -->
	<bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<!-- <property name="location" value="classpath:jdbc.properties" /> -->
		<property name="locations">
			<list>
				<!-- 这里支持多种寻址方式：classpath和file -->
				<value>classpath:jdbc-druid-config.properties</value>

				<value>classpath:log4j.properties</value>
			</list>
		</property>
		<property name="ignoreUnresolvablePlaceholders" value="true" />
	</bean>








	<bean id="taskExecutor"
		class="org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor">
		<!-- 核心线程数 -->
		<property name="corePoolSize" value="${task.core_pool_size}" />
		<!-- 最大线程数 -->
		<property name="maxPoolSize" value="${task.max_pool_size}" />
		<!-- 队列最大长度 -->
		<property name="queueCapacity" value="${task.queue_capacity}" />
		<!-- 线程池维护线程所允许的空闲时间，默认为60s -->
		<property name="keepAliveSeconds" value="${task.keep_alive_seconds}" />
	</bean>
	<!-- 注解式 -->
	<task:annotation-driven />





	<!--&lt;!&ndash; 默认的hadoopConfiguration,默认ID为hadoopConfiguration，且对于hadoopFile等不需指定ref，自动注入hadoopConfiguration &ndash;&gt;-->
	<!--<hdp:configuration resources="classpath:ctsi/credit/hadoop/hbase-site.xml" />-->
	<!--<hdp:hbase-configuration configuration-ref="hadoopConfiguration" />-->

	<!--&lt;!&ndash; hadoop hdfs 操作类FileSystem,用来读写HDFS文件 &ndash;&gt;-->
	<!--<hdp:file-system id="hadoopFile" configuration-ref="hadoopConfiguration" />-->

	<!--&lt;!&ndash; 配置HbaseTemplate &ndash;&gt;-->
	<!--<bean id="hbaseTemplate" class="org.springframework.data.hadoop.hbase.HbaseTemplate">-->
		<!--<property name="configuration" ref="hbaseConfiguration" />-->
	<!--</bean>-->


	<!--是发送邮件的配置，默认的参数 -->
	<bean id="javaMailSender" class="org.springframework.mail.javamail.JavaMailSenderImpl">
		<property name="host">
			<value>${mail.host}</value>
		</property>
		<property name="javaMailProperties">
			<props>
				<prop key="mail.smtp.auth">true</prop>
				<prop key="mail.smtp.timeout">25000</prop>
			</props>
		</property>
		<property name="username">
			<value>${mail.username}</value>
		</property>
		<property name="password">
			<value>${mail.password}</value>
		</property>
		<property name="defaultEncoding">
			<value>UTF-8</value>
		</property>
	</bean>

	<bean id="simpleMailMessage" class="org.springframework.mail.SimpleMailMessage">
		<property name="from" value="${mail.from}" />
		<property name="subject" value="${mail.subject}" />
		<property name="to" value="${mail.to}" />
		<!-- <property name="text" value="邮件内容" /> -->
	</bean>

</beans> 